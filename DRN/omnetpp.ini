[General]

sim-time-limit = 10s

#[Config Wireless01]
#description = Two hosts communicating wirelessly
#network = WirelessA
#
#*.host*.ipv4.arp.typename = "GlobalArp"
#
#*.hostA.numApps = 1
#*.hostA.app[0].typename = "UdpBasicApp"
#*.hostA.app[0].destAddresses = "hostB"
#*.hostA.app[0].destPort = 5000
#*.hostA.app[0].messageLength = 500B    
#*.hostA.app[0].sendInterval = exponential(12ms)
#*.hostA.app[0].packetName = "UDPData"
#
#*.hostB.numApps = 1
#*.hostB.app[0].typename = "UdpSink"
#*.hostB.app[0].localPort = 5000
#
#*.host*.wlan[0].typename = "AckingWirelessInterface"
#*.host*.wlan[0].mac.useAck = false
#*.host*.wlan[0].mac.fullDuplex = false
#*.host*.wlan[0].radio.transmitter.communicationRange = 500m
#*.host*.wlan[0].radio.receiver.ignoreInterference = true
#*.host*.wlan[0].mac.headerLength = 23B
#
#*.host*.**.bitrate = 10Mbps    
#*.*.radioMedium.maxTransmissionDuration = 5s
[Config Wireless01]
description = Two hosts communicating wirelessly with statistics
network = WirelessA

*.host*.ipv4.arp.typename = "GlobalArp"

*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostB"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 500B    
*.hostA.app[0].sendInterval = exponential(12ms)
*.hostA.app[0].packetName = "UDPData"

*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpSink"
*.hostB.app[0].localPort = 5000
*.hostB.app[0].statistics.recordThroughput = true

*.host*.wlan[0].typename = "AckingWirelessInterface"
*.host*.wlan[0].mac.useAck = false
*.host*.wlan[0].mac.fullDuplex = false
*.host*.wlan[0].radio.transmitter.communicationRange = 500m
*.host*.wlan[0].radio.receiver.ignoreInterference = true
*.host*.wlan[0].mac.headerLength = 23B

*.host*.**.bitrate = 10Mbps    
*.*.radioMedium.maxTransmissionDuration = 5s

*.radioMedium.statistics.recordCollisionCount = true
*.host*.wlan[0].mac.statistics.recordCollisionCount = true

[Config Wireless02]
description = Setting up some animations
extends = Wireless01

*.hostA.wlan[0].radio.displayCommunicationRange = true

*.visualizer.sceneVisualizer.descriptionFigure = "title"

*.visualizer.mediumVisualizer.displaySignals = true

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

[Config Wireless03]
description = WirelessB as standalone network
network = WirelessB

*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostB"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 500B    
*.hostA.app[0].sendInterval = exponential(12ms)
*.hostA.app[0].packetName = "UDPData"

*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpSink"
*.hostB.app[0].localPort = 5000

*.hostR1.numApps = 0

*.host*.wlan[0].radio.transmitter.communicationRange = 250m
*.hostR1.wlan[0].radio.displayCommunicationRange = true

[Config Wireless04]
description = Setting up static routing
extends = Wireless03

*.host*.ipv4.routingTable.typename = "AodvRouting"  # Enable AODV routing

*.host*.forwarding = true

*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
*.host*.ipv4.routingTable.netmaskRoutes = ""

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"
*.visualizer.routingTableVisualizer.displayRoutingTables = true
*.visualizer.routingTableVisualizer.labelFormat = ""
*.visualizer.routingTableVisualizer.lineShiftMode = "none"
*.visualizer.routingTableVisualizer.destinationFilter = "*"
*.visualizer.mediumVisualizer.displayCommunicationRanges = true

[Config Wireless05]
description = Taking interference into account
extends = Wireless04

*.host*.wlan[0].radio.receiver.ignoreInterference = false
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m

*.hostA.wlan[0].radio.displayInterferenceRange = true

*.visualizer.dataLinkVisualizer.packetFilter = ""

[Config Wireless06]
description = Using CSMA to better utilize the medium
extends = Wireless05

*.host*.wlan[0].typename = "WirelessInterface"
*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].mac.typename = "CsmaCaMac"
*.host*.wlan[0].mac.ackTimeout = 300us
*.host*.wlan[0].queue.typename = "DropTailQueue"
*.host*.wlan[0].queue.packetCapacity = -1

[Config Wireless07]
description = Turning on ACKs in CSMA
extends = Wireless06

*.host*.wlan[0].mac.useAck = true

[Config Wireless08]
description = Modeling energy consumption
extends = Wireless07

*.host*.wlan[0].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
*.host*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.host*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.host*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.host*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW

*.host*.energyStorage.typename = "IdealEpEnergyStorage"

*.host*.wlan[0].radio.displayInterferenceRange = false
*.hostR1.wlan[0].radio.displayCommunicationRange = false

*.visualizer.mediumVisualizer.displaySignals = false

[Config Wireless09]
description = Configuring node movements
extends = Wireless08

*.hostR1.mobility.typename = "LinearMobility"
*.hostR1.mobility.speed = 12mps
*.hostR1.mobility.initialMovementHeading = 270deg

*.hostR2.mobility.typename = "LinearMobility"
*.hostR2.mobility.speed = 10mps
*.hostR2.mobility.initialMovementHeading = 180deg

*.hostR3.mobility.typename = "LinearMobility"
*.hostR3.mobility.speed = 8mps
*.hostR3.mobility.initialMovementHeading = 90deg

*.host*.wlan[0].queue.packetCapacity = 50
*.host*.wlan[0].radio.transmitter.communicationRange = 300m  
*.host*.**.bitrate = 15Mbps  # Increase bitrate
*.host*.wlan[0].radio.receiver.ignoreInterference = false

*.visualizer.mobilityVisualizer.displayVelocities = true
*.visualizer.mobilityVisualizer.displayMovementTrails = true

*.*.radioMedium.maxTransmissionDuration = 10s  

[Config Wireless10]
description = Configuring ad-hoc routing (AODV)
extends = Wireless09

*.configurator.addStaticRoutes = false

*.host*.typename = "AodvRouter"

*.hostB.wlan[0].radio.displayCommunicationRange = true

*.visualizer.dataLinkVisualizer.packetFilter = "AODV*"

[Config Wireless11]
description = Adding obstacles to the environment
extends = Wireless10


*.host*.mobility.initialZ = 1.7m

*.physicalEnvironment.config = xmldoc("walls.xml")
*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss"
#[Config Wireless12]
#description = Changing to a more realistic radio model
#extends = Wireless11
#
#*.radioMedium.typename = "ApskScalarRadioMedium"
#*.radioMedium.backgroundNoise.power = -90dBm
#*.radioMedium.mediumLimitCache.centerFrequency = 2GHz
#
#*.host*.wlan[0].radio.typename = "ApskScalarRadio"
#*.host*.wlan[0].radio.centerFrequency = 2GHz
#*.host*.wlan[0].radio.bandwidth = 2MHz
#*.host*.wlan[0].radio.transmitter.power = 1.4mW
#*.host*.wlan[0].radio.transmitter.preambleDuration = 10us
#*.host*.wlan[0].radio.transmitter.headerLength = 8B
#*.host*.wlan[0].radio.receiver.sensitivity = -85dBm
#*.host*.wlan[0].radio.receiver.energyDetection = -85dBm
#*.host*.wlan[0].radio.receiver.snirThreshold = 4dB
#
#*.hostR1.wlan[*].radio.bitErrorRate.result-recording-modes = default,+vector

#[Config NonQos]
#description = Non-QoS network configuration with traffic priorities
#extends = Wireless12
#
#*.hostA.numApps = 4
#*.hostA.app[*].typename = "UdpBasicApp"
#*.hostA.app[*].destAddresses = "hostB"
#*.hostA.app[*].startTime = 1.0s + index * 0.25s
#*.hostA.app[*].stopTime = 10.0s
#
#*.hostA.app[0].destPort = 21           # Background priority
#*.hostA.app[1].destPort = 80           # Best effort priority
#*.hostA.app[2].destPort = 4000         # Video priority
#*.hostA.app[3].destPort = 5000         # Voice priority
#
#*.hostA.app[0].packetName = "background"
#*.hostA.app[1].packetName = "best effort"
#*.hostA.app[2].packetName = "video"
#*.hostA.app[3].packetName = "voice"
#
#*.hostA.app[0].messageLength = 900B
#*.hostA.app[0].sendInterval = normal(300us, 10us)  # Background - 24 Mbps
#*.hostA.app[1].messageLength = 900B
#*.hostA.app[1].sendInterval = normal(250us, 10us)  # Best effort - 28.8 Mbps
#*.hostA.app[2].messageLength = 600B
#*.hostA.app[2].sendInterval = normal(1ms, 10us)    # Video - 5 Mbps
#*.hostA.app[3].messageLength = 125B
#*.hostA.app[3].sendInterval = normal(10ms, 10us)   # Voice - 100 kbps
#
#*.hostB.numApps = 4
#*.hostB.app[*].typename = "UdpSink"
#*.hostB.app[0].localPort = 21
#*.hostB.app[1].localPort = 80
#*.hostB.app[2].localPort = 4000
#*.hostB.app[3].localPort = 5000
#*.hostB.app[*].result-recording-modes = vector 
##*.host*.wlan[0].bitrate = 54Mbps
#*.host*.ipv4.arp.typename = "GlobalArp"
#
## Debugging Tools
#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.physicalLinkVisualizer.packetFilter = "background* best effort* video* voice*"

# QoS configuration
#[Config Qos]
#extends = NonQos
#description = QoS-enabled configuration with traffic classifier
#*.hostB.app[*].result-recording-modes = vector 
#*.host*.wlan[0].mac.qosStation = true
#*.host*.wlan[0].classifier.typename = "QosClassifier"