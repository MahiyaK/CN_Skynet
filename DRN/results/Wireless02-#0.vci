file 56360 1733849947                                           
version 3
run Wireless02-0-20241210-22:57:34-21228
attr configname Wireless02
attr datetime 20241210-22:57:34
attr datetimef 20241210-225734
attr experiment Wireless02
attr inifile omnetpp.ini
attr iterationvars ""
attr iterationvarsd ""
attr iterationvarsf ""
attr measurement ""
attr network WirelessA
attr processid 21228
attr repetition 0
attr replication #0
attr resultdir results
attr runnumber 0
attr seedset 0
config image-path ../inet4.5/images
config description "Setting up some animations"
config extends Wireless01
config *.hostA.wlan[0].radio.displayCommunicationRange true
config *.visualizer.sceneVisualizer.descriptionFigure "\"title\""
config *.visualizer.mediumVisualizer.displaySignals true
config *.visualizer.physicalLinkVisualizer.displayLinks true
config *.visualizer.physicalLinkVisualizer.packetFilter "\"UDPData*\""
config description "Two hosts communicating wirelessly"
config network WirelessA
config sim-time-limit 20s
config *.host*.ipv4.arp.typename GlobalArp
config *.hostA.numApps 1
config *.hostA.app[0].typename UdpBasicApp
config *.hostA.app[0].destAddresses "\"hostB\""
config *.hostA.app[0].destPort 5000
config *.hostA.app[0].messageLength 500B
config *.hostA.app[0].sendInterval exponential(12ms)
config *.hostA.app[0].packetName "\"UDPData\""
config *.hostB.numApps 1
config *.hostB.app[0].typename UdpSink
config *.hostB.app[0].localPort 5000
config *.host*.wlan[0].typename AckingWirelessInterface
config *.host*.wlan[0].mac.useAck false
config *.host*.wlan[0].mac.fullDuplex false
config *.host*.wlan[0].radio.transmitter.communicationRange 500m
config *.host*.wlan[0].radio.receiver.ignoreInterference true
config *.host*.wlan[0].mac.headerLength 23B
config *.host*.**.bitrate 10Mbps
config *.*.radioMedium.maxTransmissionDuration 5s

vector 0 WirelessA.hostA.wlan[0].queue queueLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length"
attr unit pk
vector 1 WirelessA.hostA.wlan[0].queue queueBitLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length"
attr unit b
vector 2 WirelessA.hostA.udp passedUpPk:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetSentToUpper
attr title "packets passed up, count"
vector 3 WirelessA.hostA.udp droppedPkWrongPort:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
vector 4 WirelessA.hostA.udp droppedPkBadChecksum:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
vector 5 WirelessA.hostB.wlan[0].queue queueLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length"
attr unit pk
vector 6 WirelessA.hostB.wlan[0].queue queueBitLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length"
attr unit b
vector 7 WirelessA.hostB.udp passedUpPk:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetSentToUpper
attr title "packets passed up, count"
vector 8 WirelessA.hostB.udp droppedPkWrongPort:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
vector 9 WirelessA.hostB.udp droppedPkBadChecksum:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
vector 10 WirelessA.hostA.wlan[0].radio radioMode:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source radioModeChanged
attr title "Radio mode"
vector 11 WirelessA.hostB.wlan[0].radio radioMode:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source radioModeChanged
attr title "Radio mode"
vector 12 WirelessA.hostA.wlan[0].radio receptionState:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source receptionStateChanged
attr title "Radio reception state"
vector 13 WirelessA.hostB.wlan[0].radio receptionState:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source receptionStateChanged
attr title "Radio reception state"
vector 14 WirelessA.hostA.app[0] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSent
attr title "packets sent, packetBytes"
vector 15 WirelessA.hostA.udp packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSent
attr title "packets sent, packetBytes"
vector 16 WirelessA.hostA.wlan[0].queue incomingPacketLengths:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
vector 17 WirelessA.hostA.wlan[0].queue queueingTime:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
vector 18 WirelessA.hostA.wlan[0].queue outgoingPacketLengths:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
vector 19 WirelessA.hostA.wlan[0].mac rcvdPkFromHl:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, packetBytes"
vector 20 WirelessA.hostA.wlan[0].radio transmissionState:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source transmissionStateChanged
attr title "Radio transmission state"
vector 21 WirelessA.hostA.wlan[0].mac sentDownPk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSentToLower
attr title "packets sent to lower layer, packetBytes"
vector 22 WirelessA.hostB.wlan[0].mac rcvdPkFromLl:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetReceivedFromLower
attr title "packets received from lower layer, packetBytes"
vector 23 WirelessA.hostB.wlan[0].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, packetBytes"
vector 24 WirelessA.hostB.udp packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetReceived
attr title "packets received, packetBytes"
vector 25 WirelessA.hostB.app[0] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetReceived
attr title "packets received, packetBytes"
vector 26 WirelessA.hostB.app[0] endToEndDelay:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source dataAge(packetReceived)
attr title "end-to-end delay"
attr unit s
vector 27 WirelessA.hostB.app[0] rcvdPkSeqNo:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source appPkSeqNo(packetReceived)
attr title "received packet sequence number"
vector 28 WirelessA.hostA.wlan[0].queue incomingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPushStarted)
attr title "incoming datarate"
attr unit bps
vector 29 WirelessA.hostA.wlan[0].queue outgoingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPulled)
attr title "outgoing datarate"
attr unit bps
vector 30 WirelessA.hostB.app[0] throughput:vector ETV
attr recordingmode vector
attr source throughput(packetReceived)
attr title throughput
attr unit bps
0	9080 1680 0 865 0 0.77772574185 74 0 1 2 2
1	10760 1686 0 865 0 0.77772574185 74 0 4224 8448 35684352
2	12446 9 0 0 0 0 1 0 0 0 0
3	12455 9 0 0 0 0 1 0 0 0 0
4	12464 9 0 0 0 0 1 0 0 0 0
5	12473 45 0 0 0 0 5 0 0 0 0
6	12518 45 0 0 0 0 5 0 0 0 0
7	12563 1655 0 872 0 0.778177476106 68 0 67 2278 102510
8	14218 9 0 0 0 0 1 0 0 0 0
9	14227 9 0 0 0 0 1 0 0 0 0
10	14236 3340 0 868 0 0.77817614185 137 0 3 337 875
11	17576 30 0 0 0 0 3 0 2 2 4
12	17606 3320 0 868 0 0.77817614185 135 0 1 68 68
13	20926 3320 0 869 0 0.778177476106 135 1 3 271 677
14	24246 1815 4 876 0.022315250545 0.822714119365 68 500 500 34000 17000000
15	26061 1788 6 863 0.022315250545 0.77772574185 67 508 508 34036 17290288
16	27849 1855 8 865 0.022315250545 0.77772574185 67 4224 4224 283008 1195425792
17	29704 1679 8 865 0.022315250545 0.77772574185 67 0 0.00022277717 0.000428070109 9.1774858276467e-08
18	31383 1855 8 865 0.022315250545 0.77772574185 67 4224 4224 283008 1195425792
19	33238 1788 8 865 0.022315250545 0.77772574185 67 528 528 35376 18678528
20	35026 6621 8 868 0.022315250545 0.77817614185 268 0 2 268 402
21	41647 1788 8 865 0.022315250545 0.77772574185 67 551 551 36917 20341267
22	43435 1789 13 870 0.022766984801 0.778177476106 67 551 551 36917 20341267
23	45224 1789 13 870 0.022766984801 0.778177476106 67 528 528 35376 18678528
24	47013 1789 15 872 0.022766984801 0.778177476106 67 508 508 34036 17290288
25	48802 1789 16 873 0.022766984801 0.778177476106 67 500 500 33500 16750000
26	50591 2526 16 873 0.022766984801 0.778177476106 67 0.000451734256 0.000674511426 0.030694265261 1.4150799871626e-05
27	53117 1712 16 873 0.022766984801 0.778177476106 67 0 66 2211 98021
28	54829 132 73 722 0.1 0.7 7 126720 464640 2323200 858208665600
29	54961 132 73 722 0.1 0.7 7 126720 464640 2323200 858208665600
30	55093 132 81 730 0.1 0.7 7 120000 440000 2200000 769600000000
vector 31 WirelessA.hostA.app[0] throughput:vector ETV
attr recordingmode vector
attr source throughput(packetReceived)
attr title throughput
attr unit bps
vector 32 WirelessA.hostB.wlan[0].queue outgoingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPulled)
attr title "outgoing datarate"
attr unit bps
vector 33 WirelessA.hostB.wlan[0].queue incomingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPushStarted)
attr title "incoming datarate"
attr unit bps
28	55815 44 876 876 0.8 0.822714119365 2 0 506880 506880 256927334400
29	55859 44 876 876 0.8 0.822714119365 2 0 506880 506880 256927334400
30	55903 44 876 876 0.8 0.822714119365 2 0 480000 480000 230400000000
31	55947 137 876 876 0.1 0.822714119365 9 0 0 0 0
32	56084 137 876 876 0.1 0.822714119365 9 0 0 0 0
33	56221 137 876 876 0.1 0.822714119365 9 0 0 0 0

